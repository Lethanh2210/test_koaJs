{"version":3,"file":"bookRepository.js","names":["data","books","require","getAll","getOne","id","find","book","parseInt","save","updatedBooks","fs","writeFileSync","JSON","stringify"],"sources":["../../src/database/bookRepository.js"],"sourcesContent":["const {data: books} = require('./books.json');\r\nimport fs from 'fs';\r\n\r\nexport function getAll(){\r\n    return books;\r\n}\r\n\r\n\r\n/**\r\n * Get one book by ID\r\n * @param id id of book want to get\r\n * @returns {object} book after find in db\r\n */\r\nexport function getOne(id){\r\n    return books.find(book => book.id === parseInt(id));\r\n}\r\n\r\n/**\r\n * create a new book\r\n * @param book\r\n */\r\nexport function save(book){\r\n    const updatedBooks = [...books, book];\r\n    return fs.writeFileSync('./src/database/books.json', JSON.stringify({\r\n        data: updatedBooks\r\n    }));\r\n}\r\n"],"mappings":";;;;;;;;;AACA;;;;AADA,MAAM;EAACA,IAAI,EAAEC;AAAP,IAAgBC,OAAO,CAAC,cAAD,CAA7B;;AAGO,SAASC,MAAT,GAAiB;EACpB,OAAOF,KAAP;AACH;AAGD;AACA;AACA;AACA;AACA;;;AACO,SAASG,MAAT,CAAgBC,EAAhB,EAAmB;EACtB,OAAOJ,KAAK,CAACK,IAAN,CAAWC,IAAI,IAAIA,IAAI,CAACF,EAAL,KAAYG,QAAQ,CAACH,EAAD,CAAvC,CAAP;AACH;AAED;AACA;AACA;AACA;;;AACO,SAASI,IAAT,CAAcF,IAAd,EAAmB;EACtB,MAAMG,YAAY,GAAG,CAAC,GAAGT,KAAJ,EAAWM,IAAX,CAArB;EACA,OAAOI,WAAA,CAAGC,aAAH,CAAiB,2BAAjB,EAA8CC,IAAI,CAACC,SAAL,CAAe;IAChEd,IAAI,EAAEU;EAD0D,CAAf,CAA9C,CAAP;AAGH"}